<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" preinitialize="onPreinitialize()"
                creationComplete="onCreationComplete()">
  <mx:AdvancedDataGrid id="adg0" width="100%" height="100%" horizontalScrollPolicy="auto"
                       editable="true" sortableColumns="false" draggableColumns="false"
                       labelFunction="{CommonUtil.gridLabelFunction}"
                       keyDown="{CommonUtil.gridKeyDown(event)}" itemEditEnd="onItemEditEnd(event)">
    <mx:columns>
      <mx:AdvancedDataGridColumn dataField="{Constants.PROP_NAME_SERIAL}" width="64"
                                 labelFunction="{CommonUtil.serialLabelFunction}"
                                 styleFunction="{CommonUtil.serialStyleFunction}"/>
      <mx:AdvancedDataGridColumn dataField="no"/>
      <mx:AdvancedDataGridColumn dataField="name"/>
      <mx:AdvancedDataGridColumn dataField="formula" width="300" showDataTips="true"/>
      <mx:AdvancedDataGridColumn dataField="xxid" width="80"/>
      <mx:AdvancedDataGridColumn dataField="#fact" dataTipField="#fact.id.no" width="100"
                                 editorDataField="label" itemEditor="{noPopUpButton}"/>
      <mx:AdvancedDataGridColumn dataField="#item" dataTipField="#item.no" width="100"
                                 editorDataField="label" itemEditor="{inoPopUpButton}"/>
      <mx:AdvancedDataGridColumn dataField="#item" dataTipField="#item.name" width="120"/>
      <mx:AdvancedDataGridColumn width="1"/>
    </mx:columns>
  </mx:AdvancedDataGrid>
  <mx:AdvancedDataGrid id="adg1" editable="false" selectionMode="singleRow" sortableColumns="false"
                       visible="false" includeInLayout="false"
                       labelFunction="{CommonUtil.gridLabelFunction}"
                       keyDown="{CommonUtil.gridKeyDown(event)}">
    <mx:columns>
      <mx:AdvancedDataGridColumn dataField="{Constants.PROP_NAME_SERIAL}" width="64"
                                 labelFunction="{CommonUtil.serialLabelFunction}"
                                 styleFunction="{CommonUtil.serialStyleFunction}"/>
      <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.no"/>
      <mx:AdvancedDataGridColumn dataField="depart" dataTipField="depart.name"/>
      <mx:AdvancedDataGridColumn dataField="date"/>
      <mx:AdvancedDataGridColumn dataField="issueDate"/>
      <mx:AdvancedDataGridColumn dataField="itype$" dataTipField="itype$.label"/>
      <mx:AdvancedDataGridColumn dataField="summary"/>
      <mx:AdvancedDataGridColumn dataField="issuer" dataTipField="issuer.name"/>
      <mx:AdvancedDataGridColumn dataField="comment"/>
    </mx:columns>
  </mx:AdvancedDataGrid>
  <mx:AdvancedDataGrid id="adg2" editable="false" selectionMode="singleRow" sortableColumns="false"
                       visible="false" includeInLayout="false"
                       labelFunction="{CommonUtil.gridLabelFunction}"
                       keyDown="{CommonUtil.gridKeyDown(event)}">
    <mx:columns>
      <mx:AdvancedDataGridColumn dataField="{Constants.PROP_NAME_SERIAL}" width="64"
                                 labelFunction="{CommonUtil.serialLabelFunction}"
                                 styleFunction="{CommonUtil.serialStyleFunction}"/>
      <mx:AdvancedDataGridColumn dataField="no" width="60"/>
      <mx:AdvancedDataGridColumn dataField="name"/>
      <mx:AdvancedDataGridColumn dataField="type$" dataTipField="type$.label"/>
      <mx:AdvancedDataGridColumn dataField="formula"/>
    </mx:columns>
  </mx:AdvancedDataGrid>
  <mx:HBox horizontalAlign="center" width="100%" paddingTop="6">
    <mx:Button label="{resourceManager.getString('gcc', 'ok')}" click="save(event)"
               enabled="{UserController.hrSalWrite}"/>
    <mx:Button label="{resourceManager.getString('gcc', 'cancel')}" click="close(event)"/>
  </mx:HBox>
  <mx:Script>
    <![CDATA[
      /**
       * 此窗口设置link函数中的xxs参数(可多个)
       **/
      import mx.collections.ArrayCollection;
      import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
      import mx.controls.PopUpButton;
      import mx.events.AdvancedDataGridEvent;
      import mx.events.AdvancedDataGridEventReason;
      import mx.events.DropdownEvent;
      import mx.managers.PopUpManager;
      import mx.rpc.events.ResultEvent;
      import mx.utils.ObjectUtil;

      import com.gc.Constants;
      import com.gc.CommonEvent;
      import com.gc.common.controller.UserController;
      import com.gc.controls.AdvancedClassFactory;
      import com.gc.hr.controller.SalaryController;
      import com.gc.hr.model.SalFact;
      import com.gc.hr.model.SalFactD;
      import com.gc.hr.model.SalItem;
      import com.gc.util.CommonUtil;

      [Bindable]
      private var noPopUpButton:AdvancedClassFactory;
      [Bindable]
      private var inoPopUpButton:AdvancedClassFactory;

      private var rr:Object, map_no:Object, map_id:Object, xxs:Array;
      private var head:SalFact;
      private var list0:ArrayCollection; // xx项目列表(adg0)
      private var list1:ArrayCollection; // 凭证列表(adg1)
      private var list2:ArrayCollection; // 引用项目列表(adg2)

      private function onPreinitialize():void
      {
        list0=new ArrayCollection();
        addEventListener(CommonEvent.CREATED, onCreated);
      }

      private function onCreationComplete():void
      {
        noPopUpButton=new AdvancedClassFactory(PopUpButton);
        noPopUpButton.properties={popUp:adg1};
        noPopUpButton.listeners=[{type:DropdownEvent.CLOSE, listener:onSelectItem}]
        inoPopUpButton=new AdvancedClassFactory(PopUpButton);
        inoPopUpButton.properties={popUp:adg2};
        inoPopUpButton.listeners=[{type:DropdownEvent.CLOSE, listener:onSelectItem}]
        var bid:int=UserController.branchId;
        var did:int=head ? head.departId : 0;
        var qo:Object={"branch.id": bid, "depart.id": did};
        SalaryController.getFacts(qo, function(e1:ResultEvent):void
          {
            list1=e1.result as ArrayCollection;
            adg1.dataProvider=list1;
          });
        var fields:Array=["#fact.id.no", "#item.no"];
        CommonUtil.setDataGridColumns(adg0, "gcc_hr", "salFact.items", function(obj:Object):void
          {
            if (obj is AdvancedDataGridColumn)
            {
              obj.editable=fields.indexOf(obj.dataTipField) >= 0;
            }
          });
        CommonUtil.setDataGridColumns(adg1, "gcc_hr", "salFact");
        CommonUtil.setDataGridColumns(adg2, "gcc_hr", "salItem");
      }

      private function onSelectItem(e:Event):void
      {
        var pub:PopUpButton=e.target as PopUpButton;
        var obj:Object=pub.data;
        var item:Object=(pub.popUp as AdvancedDataGrid).selectedItem;
        if (item is SalFact)
        {
          if (ObjectUtil.compare(obj["#fact"], item) != 0 && item)
            load1(item, obj);
          obj["#fact"]=item;
          obj["#item"]=null;
        }
        else if (item is SalItem)
        {
          obj["#item"]=item;
        }
        list0.itemUpdated(obj);
        adg0.editedItemPosition=null;
        adg0.validateDisplayList();
      }

      private function onItemEditEnd(e:AdvancedDataGridEvent):void
      {
        e.preventDefault();
      }

      private function load1(qo:Object, obj:Object):void
      {
        SalaryController.getFactDs(qo, function(e1:ResultEvent):void
          {
            list2=e1.result.factds[0].items;
            adg2.dataProvider=list2;
            obj["#dd"]=e1.result.list;
          });
      }

      private function load2(obj:Object):Object
      {
        var dd:ArrayCollection=obj["#dd"] as ArrayCollection;
        var sf:SalFact=obj["#fact"] as SalFact;
        var si:SalItem=obj["#item"] as SalItem;
        var sfd:SalFactD, r:Object={};
        for each (sfd in dd)
        {
          if (sfd.branchId == sf.branchId && sfd.branchId == si.branchId && sfd.hdNo == sf.no && sfd.itemId == si.id)
            r["sfd#"+sfd.personId]=sfd.amount;
        }
        return r;
      }

      /**
       * 窗口传递参数e.data={rr:rr, xxs:["xx002"], map_no:{...}, map_id:{...}}, e.args=null
       **/
      private function onCreated(e:CommonEvent):void
      {
        rr=e.data ? e.data.rr : null;
        xxs=e.data ? e.data.xxs : null;
        map_no=e.data ? e.data.map_no : null;
        map_id=e.data ? e.data.map_id : null;
        head=e.data ? e.data.head : null;
        if (!rr || !xxs || !map_no || !map_id || !head)
          return;
        list0.removeAll();
        title=resourceManager.getString("gcc_hr", "salFact.items.input");
        this.height=xxs.length <= 6 ? 480 : 600;
        PopUpManager.centerPopUp(this);
        var n:String, si:SalItem, obj:Object, xx:Object;
        for each (n in xxs)
        {
          xx=rr.sylla.xx[n];
          si=map_no[xx.ino];
          obj={id:si.id, no:si.no, name:si.name, formula:si.formula, xxid:n};
          obj["#fact"]=xx && xx.value ? xx.value["#fact"] : null;
          obj["#item"]=xx && xx.value ? xx.value["#item"] : null;
          obj.uid=obj.id+"#"+n;
          list0.addItem(obj);
        }
        adg0.dataProvider=list0;
      }

      private function save(e:Event):void
      {
        if (CommonUtil.validateGrid(adg0, ["#fact", "#item"]).length > 0)
          return;
        var obj:Object, xx:Object=rr.sylla.xx;
        for each (obj in list0)
        {
          xx[obj.xxid].value={"#ref":load2(obj), "#fact":obj["#fact"], "#item":obj["#item"]};
        }
        dispatchEvent(CommonEvent.CLOSE_EVENT);
        owner.dispatchEvent(new CommonEvent(CommonEvent.RETURN, {type:"xx.items.link", items:list0}));
      }

      private function close(e:Event=null):void
      {
        dispatchEvent(CommonEvent.CLOSE_EVENT);
        owner.dispatchEvent(CommonEvent.RETURN_EVENT);
      }
    ]]>
  </mx:Script>
</mx:TitleWindow>
